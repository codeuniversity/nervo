// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/protocol.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ControllerInfo struct {
	PortName             string   `protobuf:"bytes,1,opt,name=portName,proto3" json:"portName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControllerInfo) Reset()         { *m = ControllerInfo{} }
func (m *ControllerInfo) String() string { return proto.CompactTextString(m) }
func (*ControllerInfo) ProtoMessage()    {}
func (*ControllerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_a31a5aa1faa3f580, []int{0}
}
func (m *ControllerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerInfo.Unmarshal(m, b)
}
func (m *ControllerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerInfo.Marshal(b, m, deterministic)
}
func (dst *ControllerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerInfo.Merge(dst, src)
}
func (m *ControllerInfo) XXX_Size() int {
	return xxx_messageInfo_ControllerInfo.Size(m)
}
func (m *ControllerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerInfo proto.InternalMessageInfo

func (m *ControllerInfo) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

type ControllerListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControllerListRequest) Reset()         { *m = ControllerListRequest{} }
func (m *ControllerListRequest) String() string { return proto.CompactTextString(m) }
func (*ControllerListRequest) ProtoMessage()    {}
func (*ControllerListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_a31a5aa1faa3f580, []int{1}
}
func (m *ControllerListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerListRequest.Unmarshal(m, b)
}
func (m *ControllerListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerListRequest.Marshal(b, m, deterministic)
}
func (dst *ControllerListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerListRequest.Merge(dst, src)
}
func (m *ControllerListRequest) XXX_Size() int {
	return xxx_messageInfo_ControllerListRequest.Size(m)
}
func (m *ControllerListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerListRequest proto.InternalMessageInfo

type ControllerListResponse struct {
	ControllerInfos      []*ControllerInfo `protobuf:"bytes,1,rep,name=controller_infos,json=controllerInfos,proto3" json:"controller_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ControllerListResponse) Reset()         { *m = ControllerListResponse{} }
func (m *ControllerListResponse) String() string { return proto.CompactTextString(m) }
func (*ControllerListResponse) ProtoMessage()    {}
func (*ControllerListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_a31a5aa1faa3f580, []int{2}
}
func (m *ControllerListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerListResponse.Unmarshal(m, b)
}
func (m *ControllerListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerListResponse.Marshal(b, m, deterministic)
}
func (dst *ControllerListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerListResponse.Merge(dst, src)
}
func (m *ControllerListResponse) XXX_Size() int {
	return xxx_messageInfo_ControllerListResponse.Size(m)
}
func (m *ControllerListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerListResponse proto.InternalMessageInfo

func (m *ControllerListResponse) GetControllerInfos() []*ControllerInfo {
	if m != nil {
		return m.ControllerInfos
	}
	return nil
}

type ReadControllerOutputRequest struct {
	ControllerPortName   string   `protobuf:"bytes,1,opt,name=controller_port_name,json=controllerPortName,proto3" json:"controller_port_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadControllerOutputRequest) Reset()         { *m = ReadControllerOutputRequest{} }
func (m *ReadControllerOutputRequest) String() string { return proto.CompactTextString(m) }
func (*ReadControllerOutputRequest) ProtoMessage()    {}
func (*ReadControllerOutputRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_a31a5aa1faa3f580, []int{3}
}
func (m *ReadControllerOutputRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadControllerOutputRequest.Unmarshal(m, b)
}
func (m *ReadControllerOutputRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadControllerOutputRequest.Marshal(b, m, deterministic)
}
func (dst *ReadControllerOutputRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadControllerOutputRequest.Merge(dst, src)
}
func (m *ReadControllerOutputRequest) XXX_Size() int {
	return xxx_messageInfo_ReadControllerOutputRequest.Size(m)
}
func (m *ReadControllerOutputRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadControllerOutputRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadControllerOutputRequest proto.InternalMessageInfo

func (m *ReadControllerOutputRequest) GetControllerPortName() string {
	if m != nil {
		return m.ControllerPortName
	}
	return ""
}

type ReadControllerOutputResponse struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadControllerOutputResponse) Reset()         { *m = ReadControllerOutputResponse{} }
func (m *ReadControllerOutputResponse) String() string { return proto.CompactTextString(m) }
func (*ReadControllerOutputResponse) ProtoMessage()    {}
func (*ReadControllerOutputResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_a31a5aa1faa3f580, []int{4}
}
func (m *ReadControllerOutputResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadControllerOutputResponse.Unmarshal(m, b)
}
func (m *ReadControllerOutputResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadControllerOutputResponse.Marshal(b, m, deterministic)
}
func (dst *ReadControllerOutputResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadControllerOutputResponse.Merge(dst, src)
}
func (m *ReadControllerOutputResponse) XXX_Size() int {
	return xxx_messageInfo_ReadControllerOutputResponse.Size(m)
}
func (m *ReadControllerOutputResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadControllerOutputResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadControllerOutputResponse proto.InternalMessageInfo

func (m *ReadControllerOutputResponse) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

type FlashControllerRequest struct {
	ControllerPortName   string   `protobuf:"bytes,1,opt,name=controller_port_name,json=controllerPortName,proto3" json:"controller_port_name,omitempty"`
	HexFileContent       []byte   `protobuf:"bytes,2,opt,name=hex_file_content,json=hexFileContent,proto3" json:"hex_file_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlashControllerRequest) Reset()         { *m = FlashControllerRequest{} }
func (m *FlashControllerRequest) String() string { return proto.CompactTextString(m) }
func (*FlashControllerRequest) ProtoMessage()    {}
func (*FlashControllerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_a31a5aa1faa3f580, []int{5}
}
func (m *FlashControllerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlashControllerRequest.Unmarshal(m, b)
}
func (m *FlashControllerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlashControllerRequest.Marshal(b, m, deterministic)
}
func (dst *FlashControllerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlashControllerRequest.Merge(dst, src)
}
func (m *FlashControllerRequest) XXX_Size() int {
	return xxx_messageInfo_FlashControllerRequest.Size(m)
}
func (m *FlashControllerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlashControllerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlashControllerRequest proto.InternalMessageInfo

func (m *FlashControllerRequest) GetControllerPortName() string {
	if m != nil {
		return m.ControllerPortName
	}
	return ""
}

func (m *FlashControllerRequest) GetHexFileContent() []byte {
	if m != nil {
		return m.HexFileContent
	}
	return nil
}

type FlashControllerResponse struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlashControllerResponse) Reset()         { *m = FlashControllerResponse{} }
func (m *FlashControllerResponse) String() string { return proto.CompactTextString(m) }
func (*FlashControllerResponse) ProtoMessage()    {}
func (*FlashControllerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_protocol_a31a5aa1faa3f580, []int{6}
}
func (m *FlashControllerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlashControllerResponse.Unmarshal(m, b)
}
func (m *FlashControllerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlashControllerResponse.Marshal(b, m, deterministic)
}
func (dst *FlashControllerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlashControllerResponse.Merge(dst, src)
}
func (m *FlashControllerResponse) XXX_Size() int {
	return xxx_messageInfo_FlashControllerResponse.Size(m)
}
func (m *FlashControllerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FlashControllerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FlashControllerResponse proto.InternalMessageInfo

func (m *FlashControllerResponse) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func init() {
	proto.RegisterType((*ControllerInfo)(nil), "proto.ControllerInfo")
	proto.RegisterType((*ControllerListRequest)(nil), "proto.ControllerListRequest")
	proto.RegisterType((*ControllerListResponse)(nil), "proto.ControllerListResponse")
	proto.RegisterType((*ReadControllerOutputRequest)(nil), "proto.ReadControllerOutputRequest")
	proto.RegisterType((*ReadControllerOutputResponse)(nil), "proto.ReadControllerOutputResponse")
	proto.RegisterType((*FlashControllerRequest)(nil), "proto.FlashControllerRequest")
	proto.RegisterType((*FlashControllerResponse)(nil), "proto.FlashControllerResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NervoServiceClient is the client API for NervoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NervoServiceClient interface {
	ListControllers(ctx context.Context, in *ControllerListRequest, opts ...grpc.CallOption) (*ControllerListResponse, error)
	ReadControllerOutput(ctx context.Context, in *ReadControllerOutputRequest, opts ...grpc.CallOption) (*ReadControllerOutputResponse, error)
	FlashController(ctx context.Context, in *FlashControllerRequest, opts ...grpc.CallOption) (*FlashControllerResponse, error)
}

type nervoServiceClient struct {
	cc *grpc.ClientConn
}

func NewNervoServiceClient(cc *grpc.ClientConn) NervoServiceClient {
	return &nervoServiceClient{cc}
}

func (c *nervoServiceClient) ListControllers(ctx context.Context, in *ControllerListRequest, opts ...grpc.CallOption) (*ControllerListResponse, error) {
	out := new(ControllerListResponse)
	err := c.cc.Invoke(ctx, "/proto.NervoService/ListControllers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nervoServiceClient) ReadControllerOutput(ctx context.Context, in *ReadControllerOutputRequest, opts ...grpc.CallOption) (*ReadControllerOutputResponse, error) {
	out := new(ReadControllerOutputResponse)
	err := c.cc.Invoke(ctx, "/proto.NervoService/ReadControllerOutput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nervoServiceClient) FlashController(ctx context.Context, in *FlashControllerRequest, opts ...grpc.CallOption) (*FlashControllerResponse, error) {
	out := new(FlashControllerResponse)
	err := c.cc.Invoke(ctx, "/proto.NervoService/FlashController", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NervoServiceServer is the server API for NervoService service.
type NervoServiceServer interface {
	ListControllers(context.Context, *ControllerListRequest) (*ControllerListResponse, error)
	ReadControllerOutput(context.Context, *ReadControllerOutputRequest) (*ReadControllerOutputResponse, error)
	FlashController(context.Context, *FlashControllerRequest) (*FlashControllerResponse, error)
}

func RegisterNervoServiceServer(s *grpc.Server, srv NervoServiceServer) {
	s.RegisterService(&_NervoService_serviceDesc, srv)
}

func _NervoService_ListControllers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ControllerListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NervoServiceServer).ListControllers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.NervoService/ListControllers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NervoServiceServer).ListControllers(ctx, req.(*ControllerListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NervoService_ReadControllerOutput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadControllerOutputRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NervoServiceServer).ReadControllerOutput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.NervoService/ReadControllerOutput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NervoServiceServer).ReadControllerOutput(ctx, req.(*ReadControllerOutputRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NervoService_FlashController_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlashControllerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NervoServiceServer).FlashController(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.NervoService/FlashController",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NervoServiceServer).FlashController(ctx, req.(*FlashControllerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NervoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.NervoService",
	HandlerType: (*NervoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListControllers",
			Handler:    _NervoService_ListControllers_Handler,
		},
		{
			MethodName: "ReadControllerOutput",
			Handler:    _NervoService_ReadControllerOutput_Handler,
		},
		{
			MethodName: "FlashController",
			Handler:    _NervoService_FlashController_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/protocol.proto",
}

func init() { proto.RegisterFile("proto/protocol.proto", fileDescriptor_protocol_a31a5aa1faa3f580) }

var fileDescriptor_protocol_a31a5aa1faa3f580 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x51, 0x5f, 0x6b, 0xfa, 0x30,
	0x14, 0xa5, 0xfe, 0xf8, 0xc9, 0x76, 0x27, 0x2a, 0xc1, 0x7f, 0x74, 0x6e, 0x48, 0xf6, 0xd2, 0x87,
	0xe1, 0x36, 0x07, 0x7b, 0x1e, 0x08, 0xc2, 0x60, 0xa8, 0x74, 0x6f, 0x7b, 0x29, 0xae, 0xbb, 0x62,
	0x21, 0x4b, 0xba, 0x24, 0x8a, 0x5f, 0x63, 0xdf, 0x78, 0xd8, 0xa6, 0xc6, 0x3f, 0xb5, 0x0f, 0x7b,
	0x69, 0x73, 0x73, 0x6e, 0xce, 0x39, 0xf7, 0x1e, 0x68, 0xc4, 0x52, 0x68, 0x71, 0x97, 0x7c, 0x43,
	0xc1, 0xfa, 0xc9, 0x81, 0xfc, 0x4f, 0x7e, 0xf4, 0x16, 0xaa, 0x43, 0xc1, 0xb5, 0x14, 0x8c, 0xa1,
	0x7c, 0xe1, 0x73, 0x41, 0x5c, 0x38, 0x8b, 0x85, 0xd4, 0xe3, 0xd9, 0x17, 0x76, 0x9c, 0x9e, 0xe3,
	0x9d, 0xfb, 0xdb, 0x9a, 0xb6, 0xa1, 0x69, 0xbb, 0x5f, 0x23, 0xa5, 0x7d, 0xfc, 0x5e, 0xa2, 0xd2,
	0xf4, 0x1d, 0x5a, 0x87, 0x80, 0x8a, 0x05, 0x57, 0x48, 0x9e, 0xa1, 0x1e, 0x6e, 0x91, 0x20, 0xe2,
	0x73, 0xa1, 0x3a, 0x4e, 0xef, 0x9f, 0x77, 0x31, 0x68, 0xa6, 0x4e, 0xfa, 0xfb, 0xfa, 0x7e, 0x2d,
	0xdc, 0xab, 0x15, 0x9d, 0xc0, 0xa5, 0x8f, 0xb3, 0x4f, 0xdb, 0x36, 0x59, 0xea, 0x78, 0x99, 0x49,
	0x93, 0x7b, 0x68, 0xec, 0x08, 0x6c, 0xac, 0x06, 0xdc, 0x7a, 0x27, 0x16, 0x9b, 0x66, 0x53, 0x3c,
	0x41, 0x37, 0x9f, 0xd0, 0x58, 0x6e, 0x41, 0x59, 0x24, 0x37, 0x86, 0xc3, 0x54, 0x54, 0x43, 0x6b,
	0xc4, 0x66, 0x6a, 0x61, 0x1f, 0xfe, 0xd9, 0x03, 0xf1, 0xa0, 0xbe, 0xc0, 0x75, 0x30, 0x8f, 0x18,
	0x06, 0x1b, 0x18, 0xb9, 0xee, 0x94, 0x7a, 0x8e, 0x57, 0xf1, 0xab, 0x0b, 0x5c, 0x8f, 0x22, 0x86,
	0xc3, 0xf4, 0x96, 0x3e, 0x40, 0xfb, 0x48, 0xb5, 0xd8, 0xe8, 0xe0, 0xa7, 0x04, 0x95, 0x31, 0xca,
	0x95, 0x78, 0x43, 0xb9, 0x8a, 0x42, 0x24, 0x63, 0xa8, 0x6d, 0x42, 0xb1, 0x14, 0x8a, 0x74, 0x8f,
	0xb6, 0xbf, 0x93, 0xa7, 0x7b, 0x75, 0x02, 0x35, 0xc2, 0x01, 0x34, 0xf2, 0x36, 0x48, 0xa8, 0x79,
	0x56, 0x90, 0x97, 0x7b, 0x53, 0xd8, 0x63, 0x04, 0xa6, 0x50, 0x3b, 0x18, 0x9a, 0x64, 0x96, 0xf2,
	0x23, 0x70, 0xaf, 0x4f, 0xc1, 0x29, 0xe3, 0x47, 0x39, 0x81, 0x1f, 0x7f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xab, 0xcd, 0x8f, 0x28, 0x0e, 0x03, 0x00, 0x00,
}
